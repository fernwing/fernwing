// Generated by LiveScript 1.2.0
var x$;
x$ = angular.module('main');
x$.factory('color', function(){
  return {
    list: ['red', 'green', 'cyan', 'purple', 'magenta', 'black'],
    hash: {
      red: 0,
      green: 0,
      cyan: 0,
      purple: 0,
      magenta: 0,
      black: 0
    },
    total: function(v){
      return v.total = this.list.map(function(it){
        return parseInt(v[it]);
      }).reduce(function(a, b){
        return a + b;
      }, 0);
    }
  };
});
x$.filter('orderState', function(){
  return function(input){
    return ['建立中', '待付款', '已付款', '已出貨', '貨到付'][input];
  };
});
x$.controller('notify', ['$scope', '$http'].concat(function($scope, $http){
  $scope.notify = [];
  return $http({
    url: '/d/notify',
    method: 'GET'
  }).success(function(d){
    return $scope.notify = d;
  }).error(function(e){
    return console.error(e);
  });
}));
x$.controller('status', ['$scope', '$http', 'stateIndicator'].concat(function($scope, $http, stateIndicator){
  $scope.state = stateIndicator.init();
  $scope.status = {
    status: -1
  };
  $scope.setStatus = function(v){
    $scope.state.loading();
    $scope.status.status = v;
    return $http({
      url: '/d/status',
      method: 'POST',
      data: JSON.stringify($scope.status)
    }).success(function(d){
      return $scope.state.done();
    }).error(function(d){
      return $scope.state.fail();
    });
  };
  return $http({
    url: '/d/status',
    method: 'GET'
  }).success(function(d){
    return $scope.status = d;
  }).error(function(d){});
}));
x$.controller('order', ['$scope', '$http', 'stateIndicator', '$timeout'].concat(function($scope, $http, stateIndicator, $timeout){
  $scope.state = stateIndicator.init();
  $http.get('/d/order').success(function(d){
    $scope.order = d;
    $scope.order.sort(function(a, b){
      var ref$, c, d;
      ref$ = [a, b].map(function(it){
        return new Date((it.init || (it.init = {})).MerchantTradeDate || 0);
      }), c = ref$[0], d = ref$[1];
      return c > d ? -1 : 1;
    });
    return $scope.order.map(function(it){
      if (!it.info) {
        return;
      }
      if (/google/.exec(it.info.referrer)) {
        return it.info.ref = "G";
      } else if (/facebook/.exec(it.info.referrer)) {
        return it.info.ref = "F";
      } else {
        return it.info.ref = "-";
      }
    });
  });
  $scope.show = function(order){
    $scope.corder = order;
    return setTimeout(function(){
      return $('#order-detail-modal').modal({
        show: true
      });
    }, 100);
  };
  $scope.hide = function(order){
    var payload;
    $scope.state.loading();
    payload = {
      MerchantTradeNo: order.init.MerchantTradeNo,
      hide: !order.hide
    };
    return $http({
      url: '/d/debug/genmac',
      method: 'POST',
      data: JSON.stringify(payload)
    }).success(function(d){
      payload.CheckMacValue = d;
      console.log(payload);
      return $http({
        url: order.hide ? '/d/order/show' : '/d/order/hide',
        method: 'POST',
        data: JSON.stringify(payload)
      }).success(function(d){
        order.hide = !order.hide;
        return $scope.state.done();
      }).error(function(e){
        return $scope.state.fail();
      });
    }).error(function(e){
      return $scope.state.fail();
    });
  };
  return $scope.ship = function(order){
    var payload;
    $scope.state.loading();
    payload = {
      MerchantTradeNo: order.init.MerchantTradeNo
    };
    return $http({
      url: '/d/debug/genmac',
      method: 'POST',
      data: JSON.stringify(payload)
    }).success(function(d){
      payload.CheckMacValue = d;
      console.log(payload);
      return $http({
        url: '/d/order/ship',
        method: 'POST',
        data: JSON.stringify(payload)
      }).success(function(d){
        order.state = 3;
        return $scope.state.done();
      }).error(function(e){
        return $scope.state.fail();
      });
    }).error(function(e){
      return $scope.state.fail();
    });
  };
}));
x$.controller('sales', ['$scope', '$http', 'stateIndicator', '$timeout', 'color'].concat(function($scope, $http, stateIndicator, $timeout, color){
  $http.get('/d/stock').success(function(d){
    $scope.avail = d.avail;
    return color.total($scope.avail);
  });
  return $http.get('/d/order').success(function(d){
    return [['init', 0], ['confirm', 1], ['paid', 2], ['shipped', 3]].map(function(v){
      var col, count, i$, len$, o, j$, ref$, len1$, k;
      col = d.filter(function(it){
        return it.state === v[1];
      });
      $scope[v[0]] = count = import$({}, color.hash);
      for (i$ = 0, len$ = col.length; i$ < len$; ++i$) {
        o = col[i$];
        for (j$ = 0, len1$ = (ref$ = color.list).length; j$ < len1$; ++j$) {
          k = ref$[j$];
          count[k] += o.info.count[k];
        }
      }
      return color.total(count);
    });
  });
}));
x$.controller('stock', ['$scope', '$http', 'stateIndicator', '$timeout', 'color'].concat(function($scope, $http, stateIndicator, $timeout, color){
  var x$;
  $scope.stock = {
    count: import$({}, color.hash),
    price: import$({}, color.hash)
  };
  x$ = $scope.state = stateIndicator.init();
  x$.loading();
  $http({
    url: "/d/stock",
    method: "GET"
  }).success(function(d){
    $scope.state.reset();
    $scope.stock = d;
    color.total($scope.stock.count);
    return console.log(d);
  });
  return $scope.update = function(){
    $scope.state.loading();
    color.total($scope.stock.count);
    return $http({
      url: "/d/stock",
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      data: JSON.stringify($scope.stock)
    }).success(function(d){
      return $timeout(function(){
        return $scope.state.done();
      }, 500);
    });
  };
}));
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}